==============================
Средняя сетевая задержка PGSQL
==============================

`Рассмотрим древовидную сеть хостов для обработки запросов. Запрос будет обрабатываться следующим образом:`

1. Запрос приходит на корневой хост (пусть он называется balancer.test.yandex.ru);
2. хост формирует подзапросы на хосты-потомки (не более одного запроса в потомок);
3. хост ждет получения всех ответов;
4. хост формирует свой ответ и возвращает его;

`Все потомки обрабатывают подзапросы по такой же схеме.`
**Все хосты логируют события ввиде следующих записей:**

	- datetime – время наступления события;
	- request_id – id запроса;
	- parent_request_id – id родительского запроса (для корневого бэкенда NULL);
	- host – имя бэкенда, на котором возникло событие;
	- type – тип события (список указан ниже);
	- data – описание события.


**Допустимые типы событий:**

	- RequestReceived – на бэкенд поступил новый запрос (поле data пустое);
	- RequestSent – на бэкенд-потомок был отправлен подзапрос (в поле data записывается имя бэкенда-потомка);
	- ResponseSent – бэкенд отправил ответ родителю (data пустое);
	- ResponseReceived – бэкенд получил ответ от потомка (в поле data записываются имя бэкенда-потомка и статус – OK или ERROR –, разделенные символом табуляции).

Все записи собираются в единую базу данных.
	Хосты не идеальны, поэтому им требуется время на пересылку запросов и получение ответов. Определим время выполение запроса к корневому хосту, как сумму разниц datetime между всеми соответствующими парами событий RequestSent/RequestReceived и ResponseSent/ResponseReceived, которые возникли при обработке запроса. Найдите эту величину, усредненную по запросам на корневой хост.

------------
Формат ввода
------------

*Используется БД postgresql 10.6.1 x64.*

**Система перед проверкой создает таблицу с событиями следующим запросом:**

.. highlight:: sql

::
	CREATE TABLE requests (  
	    datetime TIMESTAMP,  
	    request_id UUID,  
	    parent_request_id UUID,  
	    host TEXT,  
	    type TEXT,  
	    data TEXT  
	);
::

.. highlight:: none


`После таблица заполняется тестовыми данными.`

-------------
Формат вывода
-------------

`Напишите SELECT выражение, которое вернет таблицу из одной строки с колонкой avg_network_time_ms типа numeric, в которую будет записана средняя сетевая задержка в миллисекундах.`
`Внимание! Текст выражения подставится в систему как подзапрос, поэтому завершать выражение точкой с запятой не надо (в противном случае вы получите ошибку Presentation Error).`
*Примечания*
`Для таблицы requests с таким содержимым (здесь для компактности пишем числа вместо UUID’а и миллисекунды в datetime, в проверочной таблице будут UUID’ы и timestamp’ы):`
+----------+------------+-------------------+-------------------------+-----------------+------+
| datetime | request_id | parent_request_id |           host          |   type          | data |
+==========+============+===================+=========================+=================+======+
| .000     |      0     |      NULL         | balancer.test.yandex.ru | RequestReceived |      |
+----------+------------+-------------------+-------------------------+-----------------+------+

